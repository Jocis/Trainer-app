#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkaitmeninisTreneris
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Pratimai")]
	public partial class PratimuKatalogasLINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDienosPlana(DienosPlana instance);
    partial void UpdateDienosPlana(DienosPlana instance);
    partial void DeleteDienosPlana(DienosPlana instance);
    partial void InsertPratimaiTable(PratimaiTable instance);
    partial void UpdatePratimaiTable(PratimaiTable instance);
    partial void DeletePratimaiTable(PratimaiTable instance);
    partial void InsertRaumenuGrupe(RaumenuGrupe instance);
    partial void UpdateRaumenuGrupe(RaumenuGrupe instance);
    partial void DeleteRaumenuGrupe(RaumenuGrupe instance);
    partial void InsertTable(Table instance);
    partial void UpdateTable(Table instance);
    partial void DeleteTable(Table instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public PratimuKatalogasLINQDataContext() : 
				base(global::SkaitmeninisTreneris.Properties.Settings.Default.PratimaiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PratimuKatalogasLINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PratimuKatalogasLINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PratimuKatalogasLINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PratimuKatalogasLINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DienosPlana> DienosPlanas
		{
			get
			{
				return this.GetTable<DienosPlana>();
			}
		}
		
		public System.Data.Linq.Table<PratimaiTable> PratimaiTables
		{
			get
			{
				return this.GetTable<PratimaiTable>();
			}
		}
		
		public System.Data.Linq.Table<RaumenuGrupe> RaumenuGrupes
		{
			get
			{
				return this.GetTable<RaumenuGrupe>();
			}
		}
		
		public System.Data.Linq.Table<Table> Tables
		{
			get
			{
				return this.GetTable<Table>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DienosPlanas")]
	public partial class DienosPlana : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Day;
		
		private string _ExerciseName;
		
		private string _Tools;
		
		private float _Weight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    partial void OnExerciseNameChanging(string value);
    partial void OnExerciseNameChanged();
    partial void OnToolsChanging(string value);
    partial void OnToolsChanged();
    partial void OnWeightChanging(float value);
    partial void OnWeightChanged();
    #endregion
		
		public DienosPlana()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ExerciseName
		{
			get
			{
				return this._ExerciseName;
			}
			set
			{
				if ((this._ExerciseName != value))
				{
					this.OnExerciseNameChanging(value);
					this.SendPropertyChanging();
					this._ExerciseName = value;
					this.SendPropertyChanged("ExerciseName");
					this.OnExerciseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tools", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Tools
		{
			get
			{
				return this._Tools;
			}
			set
			{
				if ((this._Tools != value))
				{
					this.OnToolsChanging(value);
					this.SendPropertyChanging();
					this._Tools = value;
					this.SendPropertyChanged("Tools");
					this.OnToolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Real NOT NULL")]
		public float Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PratimaiTable")]
	public partial class PratimaiTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RaumenuGrupesId;
		
		private string _ExerciseName;
		
		private string _MainMuscle;
		
		private string _ExtraMuscles;
		
		private string _Tools;
		
		private System.Nullable<float> _Weight;
		
		private string _Photo;
		
		private System.Nullable<bool> _Patinka;
		
		private EntityRef<RaumenuGrupe> _RaumenuGrupe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRaumenuGrupesIdChanging(int value);
    partial void OnRaumenuGrupesIdChanged();
    partial void OnExerciseNameChanging(string value);
    partial void OnExerciseNameChanged();
    partial void OnMainMuscleChanging(string value);
    partial void OnMainMuscleChanged();
    partial void OnExtraMusclesChanging(string value);
    partial void OnExtraMusclesChanged();
    partial void OnToolsChanging(string value);
    partial void OnToolsChanged();
    partial void OnWeightChanging(System.Nullable<float> value);
    partial void OnWeightChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnPatinkaChanging(System.Nullable<bool> value);
    partial void OnPatinkaChanged();
    #endregion
		
		public PratimaiTable()
		{
			this._RaumenuGrupe = default(EntityRef<RaumenuGrupe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RaumenuGrupesId", DbType="Int NOT NULL")]
		public int RaumenuGrupesId
		{
			get
			{
				return this._RaumenuGrupesId;
			}
			set
			{
				if ((this._RaumenuGrupesId != value))
				{
					if (this._RaumenuGrupe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRaumenuGrupesIdChanging(value);
					this.SendPropertyChanging();
					this._RaumenuGrupesId = value;
					this.SendPropertyChanged("RaumenuGrupesId");
					this.OnRaumenuGrupesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ExerciseName
		{
			get
			{
				return this._ExerciseName;
			}
			set
			{
				if ((this._ExerciseName != value))
				{
					this.OnExerciseNameChanging(value);
					this.SendPropertyChanging();
					this._ExerciseName = value;
					this.SendPropertyChanged("ExerciseName");
					this.OnExerciseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainMuscle", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MainMuscle
		{
			get
			{
				return this._MainMuscle;
			}
			set
			{
				if ((this._MainMuscle != value))
				{
					this.OnMainMuscleChanging(value);
					this.SendPropertyChanging();
					this._MainMuscle = value;
					this.SendPropertyChanged("MainMuscle");
					this.OnMainMuscleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraMuscles", DbType="NVarChar(MAX)")]
		public string ExtraMuscles
		{
			get
			{
				return this._ExtraMuscles;
			}
			set
			{
				if ((this._ExtraMuscles != value))
				{
					this.OnExtraMusclesChanging(value);
					this.SendPropertyChanging();
					this._ExtraMuscles = value;
					this.SendPropertyChanged("ExtraMuscles");
					this.OnExtraMusclesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tools", DbType="NVarChar(MAX)")]
		public string Tools
		{
			get
			{
				return this._Tools;
			}
			set
			{
				if ((this._Tools != value))
				{
					this.OnToolsChanging(value);
					this.SendPropertyChanging();
					this._Tools = value;
					this.SendPropertyChanged("Tools");
					this.OnToolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Real")]
		public System.Nullable<float> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patinka", DbType="Bit")]
		public System.Nullable<bool> Patinka
		{
			get
			{
				return this._Patinka;
			}
			set
			{
				if ((this._Patinka != value))
				{
					this.OnPatinkaChanging(value);
					this.SendPropertyChanging();
					this._Patinka = value;
					this.SendPropertyChanged("Patinka");
					this.OnPatinkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RaumenuGrupe_PratimaiTable", Storage="_RaumenuGrupe", ThisKey="RaumenuGrupesId", OtherKey="Id", IsForeignKey=true)]
		public RaumenuGrupe RaumenuGrupe
		{
			get
			{
				return this._RaumenuGrupe.Entity;
			}
			set
			{
				RaumenuGrupe previousValue = this._RaumenuGrupe.Entity;
				if (((previousValue != value) 
							|| (this._RaumenuGrupe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RaumenuGrupe.Entity = null;
						previousValue.PratimaiTables.Remove(this);
					}
					this._RaumenuGrupe.Entity = value;
					if ((value != null))
					{
						value.PratimaiTables.Add(this);
						this._RaumenuGrupesId = value.Id;
					}
					else
					{
						this._RaumenuGrupesId = default(int);
					}
					this.SendPropertyChanged("RaumenuGrupe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RaumenuGrupes")]
	public partial class RaumenuGrupe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UsersId;
		
		private string _MuscleGroup;
		
		private string _MuscleGroupPhoto;
		
		private EntitySet<PratimaiTable> _PratimaiTables;
		
		private EntityRef<Table> _Table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsersIdChanging(int value);
    partial void OnUsersIdChanged();
    partial void OnMuscleGroupChanging(string value);
    partial void OnMuscleGroupChanged();
    partial void OnMuscleGroupPhotoChanging(string value);
    partial void OnMuscleGroupPhotoChanged();
    #endregion
		
		public RaumenuGrupe()
		{
			this._PratimaiTables = new EntitySet<PratimaiTable>(new Action<PratimaiTable>(this.attach_PratimaiTables), new Action<PratimaiTable>(this.detach_PratimaiTables));
			this._Table = default(EntityRef<Table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersId", DbType="Int NOT NULL")]
		public int UsersId
		{
			get
			{
				return this._UsersId;
			}
			set
			{
				if ((this._UsersId != value))
				{
					if (this._Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsersIdChanging(value);
					this.SendPropertyChanging();
					this._UsersId = value;
					this.SendPropertyChanged("UsersId");
					this.OnUsersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MuscleGroup", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MuscleGroup
		{
			get
			{
				return this._MuscleGroup;
			}
			set
			{
				if ((this._MuscleGroup != value))
				{
					this.OnMuscleGroupChanging(value);
					this.SendPropertyChanging();
					this._MuscleGroup = value;
					this.SendPropertyChanged("MuscleGroup");
					this.OnMuscleGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MuscleGroupPhoto", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MuscleGroupPhoto
		{
			get
			{
				return this._MuscleGroupPhoto;
			}
			set
			{
				if ((this._MuscleGroupPhoto != value))
				{
					this.OnMuscleGroupPhotoChanging(value);
					this.SendPropertyChanging();
					this._MuscleGroupPhoto = value;
					this.SendPropertyChanged("MuscleGroupPhoto");
					this.OnMuscleGroupPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RaumenuGrupe_PratimaiTable", Storage="_PratimaiTables", ThisKey="Id", OtherKey="RaumenuGrupesId")]
		public EntitySet<PratimaiTable> PratimaiTables
		{
			get
			{
				return this._PratimaiTables;
			}
			set
			{
				this._PratimaiTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_RaumenuGrupe", Storage="_Table", ThisKey="UsersId", OtherKey="Id", IsForeignKey=true)]
		public Table Table
		{
			get
			{
				return this._Table.Entity;
			}
			set
			{
				Table previousValue = this._Table.Entity;
				if (((previousValue != value) 
							|| (this._Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table.Entity = null;
						previousValue.RaumenuGrupes.Remove(this);
					}
					this._Table.Entity = value;
					if ((value != null))
					{
						value.RaumenuGrupes.Add(this);
						this._UsersId = value.Id;
					}
					else
					{
						this._UsersId = default(int);
					}
					this.SendPropertyChanged("Table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PratimaiTables(PratimaiTable entity)
		{
			this.SendPropertyChanging();
			entity.RaumenuGrupe = this;
		}
		
		private void detach_PratimaiTables(PratimaiTable entity)
		{
			this.SendPropertyChanging();
			entity.RaumenuGrupe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Table]")]
	public partial class Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ZmogausId;
		
		private EntitySet<RaumenuGrupe> _RaumenuGrupes;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnZmogausIdChanging(int value);
    partial void OnZmogausIdChanged();
    #endregion
		
		public Table()
		{
			this._RaumenuGrupes = new EntitySet<RaumenuGrupe>(new Action<RaumenuGrupe>(this.attach_RaumenuGrupes), new Action<RaumenuGrupe>(this.detach_RaumenuGrupes));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZmogausId", DbType="Int NOT NULL")]
		public int ZmogausId
		{
			get
			{
				return this._ZmogausId;
			}
			set
			{
				if ((this._ZmogausId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZmogausIdChanging(value);
					this.SendPropertyChanging();
					this._ZmogausId = value;
					this.SendPropertyChanged("ZmogausId");
					this.OnZmogausIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Table_RaumenuGrupe", Storage="_RaumenuGrupes", ThisKey="Id", OtherKey="UsersId")]
		public EntitySet<RaumenuGrupe> RaumenuGrupes
		{
			get
			{
				return this._RaumenuGrupes;
			}
			set
			{
				this._RaumenuGrupes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Table", Storage="_User", ThisKey="ZmogausId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tables.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tables.Add(this);
						this._ZmogausId = value.Id;
					}
					else
					{
						this._ZmogausId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RaumenuGrupes(RaumenuGrupe entity)
		{
			this.SendPropertyChanging();
			entity.Table = this;
		}
		
		private void detach_RaumenuGrupes(RaumenuGrupe entity)
		{
			this.SendPropertyChanging();
			entity.Table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private EntitySet<Table> _Tables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			this._Tables = new EntitySet<Table>(new Action<Table>(this.attach_Tables), new Action<Table>(this.detach_Tables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Table", Storage="_Tables", ThisKey="Id", OtherKey="ZmogausId")]
		public EntitySet<Table> Tables
		{
			get
			{
				return this._Tables;
			}
			set
			{
				this._Tables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tables(Table entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tables(Table entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
